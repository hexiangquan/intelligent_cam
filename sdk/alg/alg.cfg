/*
 * ce.cfg
 *
 * XDC Configuration File
 *
 * Copyright (C) 2010 Texas Instruments Incorporated - http://www.ti.com/ 
 * 
 * 
 *  Redistribution and use in source and binary forms, with or without 
 *  modification, are permitted provided that the following conditions 
 *  are met:
 *
 *    Redistributions of source code must retain the above copyright 
 *    notice, this list of conditions and the following disclaimer.
 *
 *    Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the 
 *    documentation and/or other materials provided with the   
 *    distribution.
 *
 *    Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 
 *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT 
 *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 *  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT 
 *  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
 *  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT 
 *  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 *  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 *  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT 
 *  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE 
 *  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
*/

var Program = xdc.useModule('xdc.cfg.Program');

var osalGlobal = xdc.useModule('ti.sdo.ce.osal.Global');
osalGlobal.runtimeEnv = osalGlobal.LINUX;

environment['xdc.cfg.check.fatal'] = 'false';

/*
 * Load common XDC config settings
 */

var GTINFRA = xdc.useModule("ti.sdo.fc.utils.gtinfra.GTINFRA");
    GTINFRA.runtimeEnv = GTINFRA.NONE;
     
var GT = xdc.useModule("ti.sdo.utils.trace.GT");
    GT.MALLOCFXN = "myMalloc";
    GT.PRINTFXN = "printfCaller";

xdc.loadPackage("ti.sdo.fc.utils.api");

var CMEM = xdc.useModule('ti.sdo.linuxutils.cmem.CMEM');

var RMAN = xdc.useModule('ti.sdo.fc.rman.RMAN');
    RMAN.useDSKT2 = false;
    RMAN.persistentAllocFxn = "__ALG_allocMemory" ;
    RMAN.persistentFreeFxn = "__ALG_freeMemory" ;
    RMAN.trace = false;
    RMAN.tableSize = 10;
    RMAN.semCreateFxn = "Sem_create";  
    RMAN.semDeleteFxn = "Sem_delete";  
    RMAN.semPendFxn = "Sem_pend";  
    RMAN.semPostFxn = "Sem_post";  
    RMAN.debug = false;

var EDMA3 = xdc.useModule('ti.sdo.fc.edma3.Settings');
    EDMA3.globalInit = true;
    EDMA3.maxQdmaChannels = [10,10,10,10];
    EDMA3.debug = false;
    EDMA3.trace = false;

var EDMA3CHAN = xdc.useModule('ti.sdo.fc.ires.edma3chan.EDMA3CHAN');
    EDMA3CHAN.trace = false;
    EDMA3CHAN.debug = false;

var EDMA = xdc.useModule('ti.sdo.linuxutils.edma.EDMA');

var VICP = xdc.useModule('ti.sdo.linuxutils.vicp.VICP');
    VICP.debug = false;  

var VICP2 = xdc.useModule('ti.sdo.fc.ires.vicp.VICP2');
    VICP2.debug = false;
    VICP2.trace = false;

var VICPSYNC = xdc.useModule('ti.sdo.fc.vicpsync.VICPSYNC');
    VICPSYNC.debug = false;    

var HDVICP = xdc.useModule('ti.sdo.fc.ires.hdvicp.HDVICP');
    HDVICP.debug = false;
    HDVICP.trace = false;

var HDVICPSYNC = xdc.useModule('ti.sdo.fc.hdvicpsync.HDVICPSYNC');
    HDVICPSYNC.debug = false;
    HDVICPSYNC.trace = false;

var MEMUTILS = xdc.useModule('ti.sdo.fc.memutils.MEMUTILS');
    MEMUTILS.noLib = false;
    MEMUTILS.noOS = false;


var LSP = xdc.useModule('ti.sdo.linuxutils.edma.EDMA');
    LSP.debug = false;

var ADDRSPACE = xdc.useModule('ti.sdo.fc.ires.addrspace.ADDRSPACE');

var MEMTCM = xdc.useModule('ti.sdo.fc.ires.memtcm.MEMTCM');
MEMTCM.cmemBlockId = 1; 
xdc.loadPackage("ti.sdo.ce.video2");
xdc.loadPackage("ti.sdo.fc.hdvicpsync");
/*
 *  ======== Engine Configuration ========
 */

var MPEG2ENC = xdc.useModule('ti.sdo.codecs.mpeg2enc.ce.MPEG2ENC');
var MPEG2DEC = xdc.useModule('ti.sdo.codecs.mpeg2dec.ce.MPEG2DEC');
var MPEG4HDVICPENC = xdc.useModule('ti.sdo.codecs.mpeg4enc_hdvicp.ce.MPEG4ENC_HDVICP');
var MPEG4HDVICPDEC = xdc.useModule('ti.sdo.codecs.mpeg4dec_hdvicp.ce.MPEG4DEC_HDVICP');
var MPEG4ENC = xdc.useModule('ti.sdo.codecs.mpeg4enc.ce.MPEG4ENC');
var MPEG4DEC = xdc.useModule('ti.sdo.codecs.mpeg4dec.ce.MPEG4DEC');
var VC1DEC = xdc.useModule('ti.sdo.codecs.vc1dec.ce.VC1DEC');
var JPEGENC = xdc.useModule('ti.sdo.codecs.jpegenc.ce.JPEGENC');
var JPEGDEC = xdc.useModule('ti.sdo.codecs.jpegdec.ce.JPEGDEC');
var H264DEC = xdc.useModule('ti.sdo.codecs.h264dec.ce.H264DEC');
var H264ENC = xdc.useModule('ti.sdo.codecs.h264enc.ce.H264ENC');
//var G711DEC  = xdc.useModule('ti.sdo.ce.examples.codecs.g711.G711DEC');
//var G711ENC = xdc.useModule('ti.sdo.ce.examples.codecs.g711.G711ENC');
var G711DEC  = xdc.useModule('ittiam.codecs.g711_dec.ce.G711_DEC');
var G711ENC = xdc.useModule('ittiam.codecs.g711_enc.ce.G711_ENC');
var AACDEC  = xdc.useModule('ittiam.codecs.aac_dec.ce.AAC_DEC');
var AACLCENC  = xdc.useModule('ittiam.codecs.aaclc_enc.ce.AACLC_ENC');
//var MP3DEC  = xdc.useModule('ittiam.codecs.mp3_dec.ce.MP3_DEC');
//var MP3ENC  = xdc.useModule('ittiam.codecs.mp3_enc.ce.MP3_ENC');
//var WMADEC  = xdc.useModule('ittiam.codecs.wma_dec.ce.WMA_DEC');
//var WMAENC  = xdc.useModule('ittiam.codecs.wma_enc.ce.WMA_ENC');

var Engine = xdc.useModule('ti.sdo.ce.Engine');
xdc.useModule('ti.sdo.ce.Settings').checked = false;

/*
 * Only one codec can be integrated at a time in the current release
 */

var encode = Engine.create("encode", [
   {name: "mpeg4hdvicpenc1", mod: MPEG4HDVICPENC, local: true, groupId: 1},
   {name: "mpeg4enc1", mod: MPEG4ENC, local: true, groupId: 1},
   {name: "mpeg2enc1", mod: MPEG2ENC, local: true, groupId: 1},
   {name: "jpegenc1", mod: JPEGENC, local: true, groupId: 1},
   {name: "h264enc1", mod: H264ENC, local: true, groupId: 1},
   {name: "aaclcenc1", mod: AACLCENC, local: true, groupId: 1},
   {name: "g711enc1", mod: G711ENC, local: true, groupId: 1},
//   {name: "mp3enc1", mod: MP3ENC, local: true, groupId: 1},
//   {name: "wmaenc1", mod: WMAENC, local: true, groupId: 1},
]);

var decode = Engine.create("decode", [
   {name: "mpeg4hdvicpdec2", mod: MPEG4HDVICPDEC, local: true, groupId: 1},
   {name: "mpeg4dec2", mod: MPEG4DEC, local: true, groupId: 1},
   {name: "mpeg2dec2", mod: MPEG2DEC, local: true, groupId: 1},
   {name: "vc1dec2", mod: VC1DEC, local: true, groupId: 1},
   {name: "jpegdec1", mod: JPEGDEC, local: true, groupId: 1},
   {name: "h264dec2", mod: H264DEC, local: true, groupId: 1},
   {name: "aacdec1", mod: AACDEC, local: true, groupId: 1},
   {name: "g711dec1", mod: G711DEC, local: true, groupId: 1},
//   {name: "mp3dec1", mod: MP3DEC, local: true, groupId: 1},
//   {name: "wmadec1", mod: WMADEC, local: true, groupId: 1},
]);

var encodedecode = Engine.create("encodedecode", [
   {name: "mpeg4hdvicpenc1", mod: MPEG4HDVICPENC, local: true, groupId: 1},
   {name: "mpeg4hdvicpdec2", mod: MPEG4HDVICPDEC, local: true, groupId: 1},
   {name: "mpeg4enc1", mod: MPEG4ENC, local: true, groupId: 1},
   {name: "mpeg4dec2", mod: MPEG4DEC, local: true, groupId: 1},
   {name: "mpeg2enc1", mod: MPEG2ENC, local: true, groupId: 1},
   {name: "mpeg2dec2", mod: MPEG2DEC, local: true, groupId: 1},
   {name: "vc1dec2", mod: VC1DEC, local: true, groupId: 1},
   {name: "jpegdec1", mod: JPEGDEC, local: true, groupId: 1},
   {name: "jpegenc1", mod: JPEGENC, local: true, groupId: 1},
   {name: "h264dec2", mod: H264DEC, local: true, groupId: 1},
   {name: "h264enc1", mod: H264ENC, local: true, groupId: 1},
   {name: "aacdec1", mod: AACDEC, local: true, groupId: 1},
   {name: "aaclcenc1", mod: AACLCENC, local: true, groupId: 1},
   {name: "g711enc1", mod: G711ENC, local: true, groupId: 1},
   {name: "g711dec1", mod: G711DEC, local: true, groupId: 1},
//   {name: "mp3dec1", mod: MP3DEC, local: true, groupId: 1},
//   {name: "mp3enc1", mod: MP3ENC, local: true, groupId: 1},
//   {name: "wmaenc1", mod: WMAENC, local: true, groupId: 1},
//   {name: "wmadec1", mod: WMADEC, local: true, groupId: 1},
]);

/*
 * Turn cache on while running the AAC encoder to achieve better performance. 
 * The rest of the codecs are unaffected.
 */
AACLCENC.useCache = true;

Program.main = null;
